'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
'
Namespace prodService
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="Service1Soap", [Namespace]:="http://seu-us.com/")>  _
    Partial Public Class Service1
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private GetEmployeesByLocationOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeesByLocationwPhotoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeewPhotoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEmployeeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetBirthdaysOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetWorkOrderOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GetEditLoadsOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getParentCompanyOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getBannersOperationCompleted As System.Threading.SendOrPostCallback
        
        Private getDockMonitorReportDataOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AuthenticateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private tAuthenticateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.seuDockMonitor.My.MySettings.Default.seuDockMonitor_prodService_Service1
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event GetEmployeesByLocationCompleted As GetEmployeesByLocationCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeesByLocationwPhotoCompleted As GetEmployeesByLocationwPhotoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeewPhotoCompleted As GetEmployeewPhotoCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEmployeeCompleted As GetEmployeeCompletedEventHandler
        
        '''<remarks/>
        Public Event GetBirthdaysCompleted As GetBirthdaysCompletedEventHandler
        
        '''<remarks/>
        Public Event GetWorkOrderCompleted As GetWorkOrderCompletedEventHandler
        
        '''<remarks/>
        Public Event GetEditLoadsCompleted As GetEditLoadsCompletedEventHandler
        
        '''<remarks/>
        Public Event getParentCompanyCompleted As getParentCompanyCompletedEventHandler
        
        '''<remarks/>
        Public Event getBannersCompleted As getBannersCompletedEventHandler
        
        '''<remarks/>
        Public Event getDockMonitorReportDataCompleted As getDockMonitorReportDataCompletedEventHandler
        
        '''<remarks/>
        Public Event AuthenticateCompleted As AuthenticateCompletedEventHandler
        
        '''<remarks/>
        Public Event tAuthenticateCompleted As tAuthenticateCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://seu-us.com/GetEmployeesByLocation", RequestNamespace:="http://seu-us.com/", ResponseNamespace:="http://seu-us.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeesByLocation(ByVal locationId As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetEmployeesByLocation", New Object() {locationId})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeesByLocationAsync(ByVal locationId As String)
            Me.GetEmployeesByLocationAsync(locationId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeesByLocationAsync(ByVal locationId As String, ByVal userState As Object)
            If (Me.GetEmployeesByLocationOperationCompleted Is Nothing) Then
                Me.GetEmployeesByLocationOperationCompleted = AddressOf Me.OnGetEmployeesByLocationOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeesByLocation", New Object() {locationId}, Me.GetEmployeesByLocationOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeesByLocationOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeesByLocationCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeesByLocationCompleted(Me, New GetEmployeesByLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://seu-us.com/GetEmployeesByLocationwPhoto", RequestNamespace:="http://seu-us.com/", ResponseNamespace:="http://seu-us.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeesByLocationwPhoto(ByVal locationId As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetEmployeesByLocationwPhoto", New Object() {locationId})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeesByLocationwPhotoAsync(ByVal locationId As String)
            Me.GetEmployeesByLocationwPhotoAsync(locationId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeesByLocationwPhotoAsync(ByVal locationId As String, ByVal userState As Object)
            If (Me.GetEmployeesByLocationwPhotoOperationCompleted Is Nothing) Then
                Me.GetEmployeesByLocationwPhotoOperationCompleted = AddressOf Me.OnGetEmployeesByLocationwPhotoOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeesByLocationwPhoto", New Object() {locationId}, Me.GetEmployeesByLocationwPhotoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeesByLocationwPhotoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeesByLocationwPhotoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeesByLocationwPhotoCompleted(Me, New GetEmployeesByLocationwPhotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://seu-us.com/GetEmployeewPhoto", RequestNamespace:="http://seu-us.com/", ResponseNamespace:="http://seu-us.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployeewPhoto(ByVal employeeId As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetEmployeewPhoto", New Object() {employeeId})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeewPhotoAsync(ByVal employeeId As String)
            Me.GetEmployeewPhotoAsync(employeeId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeewPhotoAsync(ByVal employeeId As String, ByVal userState As Object)
            If (Me.GetEmployeewPhotoOperationCompleted Is Nothing) Then
                Me.GetEmployeewPhotoOperationCompleted = AddressOf Me.OnGetEmployeewPhotoOperationCompleted
            End If
            Me.InvokeAsync("GetEmployeewPhoto", New Object() {employeeId}, Me.GetEmployeewPhotoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeewPhotoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeewPhotoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeewPhotoCompleted(Me, New GetEmployeewPhotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://seu-us.com/GetEmployee", RequestNamespace:="http://seu-us.com/", ResponseNamespace:="http://seu-us.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEmployee(ByVal employeeId As String) As System.Data.DataTable
            Dim results() As Object = Me.Invoke("GetEmployee", New Object() {employeeId})
            Return CType(results(0),System.Data.DataTable)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeAsync(ByVal employeeId As String)
            Me.GetEmployeeAsync(employeeId, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEmployeeAsync(ByVal employeeId As String, ByVal userState As Object)
            If (Me.GetEmployeeOperationCompleted Is Nothing) Then
                Me.GetEmployeeOperationCompleted = AddressOf Me.OnGetEmployeeOperationCompleted
            End If
            Me.InvokeAsync("GetEmployee", New Object() {employeeId}, Me.GetEmployeeOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEmployeeOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEmployeeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEmployeeCompleted(Me, New GetEmployeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://seu-us.com/GetBirthdays", RequestNamespace:="http://seu-us.com/", ResponseNamespace:="http://seu-us.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function GetBirthdays(ByVal locationID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetBirthdays", New Object() {locationID})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub GetBirthdaysAsync(ByVal locationID As String)
            Me.GetBirthdaysAsync(locationID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetBirthdaysAsync(ByVal locationID As String, ByVal userState As Object)
            If (Me.GetBirthdaysOperationCompleted Is Nothing) Then
                Me.GetBirthdaysOperationCompleted = AddressOf Me.OnGetBirthdaysOperationCompleted
            End If
            Me.InvokeAsync("GetBirthdays", New Object() {locationID}, Me.GetBirthdaysOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetBirthdaysOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetBirthdaysCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetBirthdaysCompleted(Me, New GetBirthdaysCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://seu-us.com/GetWorkOrder", RequestNamespace:="http://seu-us.com/", ResponseNamespace:="http://seu-us.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetWorkOrder(ByVal workorderid As String) As System.Xml.XmlNode
            Dim results() As Object = Me.Invoke("GetWorkOrder", New Object() {workorderid})
            Return CType(results(0),System.Xml.XmlNode)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetWorkOrderAsync(ByVal workorderid As String)
            Me.GetWorkOrderAsync(workorderid, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetWorkOrderAsync(ByVal workorderid As String, ByVal userState As Object)
            If (Me.GetWorkOrderOperationCompleted Is Nothing) Then
                Me.GetWorkOrderOperationCompleted = AddressOf Me.OnGetWorkOrderOperationCompleted
            End If
            Me.InvokeAsync("GetWorkOrder", New Object() {workorderid}, Me.GetWorkOrderOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetWorkOrderOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetWorkOrderCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetWorkOrderCompleted(Me, New GetWorkOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://seu-us.com/GetEditLoads", RequestNamespace:="http://seu-us.com/", ResponseNamespace:="http://seu-us.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GetEditLoads(ByVal locaID As String, ByVal sDate As Date, ByVal eDate As Date) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("GetEditLoads", New Object() {locaID, sDate, eDate})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GetEditLoadsAsync(ByVal locaID As String, ByVal sDate As Date, ByVal eDate As Date)
            Me.GetEditLoadsAsync(locaID, sDate, eDate, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GetEditLoadsAsync(ByVal locaID As String, ByVal sDate As Date, ByVal eDate As Date, ByVal userState As Object)
            If (Me.GetEditLoadsOperationCompleted Is Nothing) Then
                Me.GetEditLoadsOperationCompleted = AddressOf Me.OnGetEditLoadsOperationCompleted
            End If
            Me.InvokeAsync("GetEditLoads", New Object() {locaID, sDate, eDate}, Me.GetEditLoadsOperationCompleted, userState)
        End Sub
        
        Private Sub OnGetEditLoadsOperationCompleted(ByVal arg As Object)
            If (Not (Me.GetEditLoadsCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GetEditLoadsCompleted(Me, New GetEditLoadsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://seu-us.com/getParentCompany", RequestNamespace:="http://seu-us.com/", ResponseNamespace:="http://seu-us.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getParentCompany(ByVal locationID As String) As String
            Dim results() As Object = Me.Invoke("getParentCompany", New Object() {locationID})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getParentCompanyAsync(ByVal locationID As String)
            Me.getParentCompanyAsync(locationID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getParentCompanyAsync(ByVal locationID As String, ByVal userState As Object)
            If (Me.getParentCompanyOperationCompleted Is Nothing) Then
                Me.getParentCompanyOperationCompleted = AddressOf Me.OngetParentCompanyOperationCompleted
            End If
            Me.InvokeAsync("getParentCompany", New Object() {locationID}, Me.getParentCompanyOperationCompleted, userState)
        End Sub
        
        Private Sub OngetParentCompanyOperationCompleted(ByVal arg As Object)
            If (Not (Me.getParentCompanyCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getParentCompanyCompleted(Me, New getParentCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://seu-us.com/getBanners", RequestNamespace:="http://seu-us.com/", ResponseNamespace:="http://seu-us.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function getBanners(ByVal locationID As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("getBanners", New Object() {locationID})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub getBannersAsync(ByVal locationID As String)
            Me.getBannersAsync(locationID, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getBannersAsync(ByVal locationID As String, ByVal userState As Object)
            If (Me.getBannersOperationCompleted Is Nothing) Then
                Me.getBannersOperationCompleted = AddressOf Me.OngetBannersOperationCompleted
            End If
            Me.InvokeAsync("getBanners", New Object() {locationID}, Me.getBannersOperationCompleted, userState)
        End Sub
        
        Private Sub OngetBannersOperationCompleted(ByVal arg As Object)
            If (Not (Me.getBannersCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getBannersCompleted(Me, New getBannersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://seu-us.com/getDockMonitorReportData", RequestNamespace:="http://seu-us.com/", ResponseNamespace:="http://seu-us.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function getDockMonitorReportData(ByVal locationName As String, ByVal showAll As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("getDockMonitorReportData", New Object() {locationName, showAll})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub getDockMonitorReportDataAsync(ByVal locationName As String, ByVal showAll As Boolean)
            Me.getDockMonitorReportDataAsync(locationName, showAll, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub getDockMonitorReportDataAsync(ByVal locationName As String, ByVal showAll As Boolean, ByVal userState As Object)
            If (Me.getDockMonitorReportDataOperationCompleted Is Nothing) Then
                Me.getDockMonitorReportDataOperationCompleted = AddressOf Me.OngetDockMonitorReportDataOperationCompleted
            End If
            Me.InvokeAsync("getDockMonitorReportData", New Object() {locationName, showAll}, Me.getDockMonitorReportDataOperationCompleted, userState)
        End Sub
        
        Private Sub OngetDockMonitorReportDataOperationCompleted(ByVal arg As Object)
            If (Not (Me.getDockMonitorReportDataCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent getDockMonitorReportDataCompleted(Me, New getDockMonitorReportDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://seu-us.com/Authenticate", RequestNamespace:="http://seu-us.com/", ResponseNamespace:="http://seu-us.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Authenticate(ByVal inputs As ExternalLoginProviderInputs) As ExternalLoginProviderResult
            Dim results() As Object = Me.Invoke("Authenticate", New Object() {inputs})
            Return CType(results(0),ExternalLoginProviderResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AuthenticateAsync(ByVal inputs As ExternalLoginProviderInputs)
            Me.AuthenticateAsync(inputs, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AuthenticateAsync(ByVal inputs As ExternalLoginProviderInputs, ByVal userState As Object)
            If (Me.AuthenticateOperationCompleted Is Nothing) Then
                Me.AuthenticateOperationCompleted = AddressOf Me.OnAuthenticateOperationCompleted
            End If
            Me.InvokeAsync("Authenticate", New Object() {inputs}, Me.AuthenticateOperationCompleted, userState)
        End Sub
        
        Private Sub OnAuthenticateOperationCompleted(ByVal arg As Object)
            If (Not (Me.AuthenticateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AuthenticateCompleted(Me, New AuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://seu-us.com/tAuthenticate", RequestNamespace:="http://seu-us.com/", ResponseNamespace:="http://seu-us.com/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function tAuthenticate(ByVal LoginUsername As String, ByVal loginPassword As String) As ExternalLoginProviderResult
            Dim results() As Object = Me.Invoke("tAuthenticate", New Object() {LoginUsername, loginPassword})
            Return CType(results(0),ExternalLoginProviderResult)
        End Function
        
        '''<remarks/>
        Public Overloads Sub tAuthenticateAsync(ByVal LoginUsername As String, ByVal loginPassword As String)
            Me.tAuthenticateAsync(LoginUsername, loginPassword, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub tAuthenticateAsync(ByVal LoginUsername As String, ByVal loginPassword As String, ByVal userState As Object)
            If (Me.tAuthenticateOperationCompleted Is Nothing) Then
                Me.tAuthenticateOperationCompleted = AddressOf Me.OntAuthenticateOperationCompleted
            End If
            Me.InvokeAsync("tAuthenticate", New Object() {LoginUsername, loginPassword}, Me.tAuthenticateOperationCompleted, userState)
        End Sub
        
        Private Sub OntAuthenticateOperationCompleted(ByVal arg As Object)
            If (Not (Me.tAuthenticateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent tAuthenticateCompleted(Me, New tAuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://seu-us.com/")>  _
    Partial Public Class ExternalLoginProviderInputs
        
        Private inputVariablesField() As String
        
        '''<remarks/>
        Public Property InputVariables() As String()
            Get
                Return Me.inputVariablesField
            End Get
            Set
                Me.inputVariablesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.2612.0"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://seu-us.com/")>  _
    Partial Public Class ExternalLoginProviderResult
        
        Private successField As Boolean
        
        Private messageField As String
        
        Private outputVariablesField() As String
        
        '''<remarks/>
        Public Property Success() As Boolean
            Get
                Return Me.successField
            End Get
            Set
                Me.successField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Message() As String
            Get
                Return Me.messageField
            End Get
            Set
                Me.messageField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property OutputVariables() As String()
            Get
                Return Me.outputVariablesField
            End Get
            Set
                Me.outputVariablesField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetEmployeesByLocationCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeesByLocationCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeesByLocationCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetEmployeesByLocationwPhotoCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeesByLocationwPhotoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeesByLocationwPhotoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetEmployeewPhotoCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeewPhotoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeewPhotoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetEmployeeCompletedEventHandler(ByVal sender As Object, ByVal e As GetEmployeeCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEmployeeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetBirthdaysCompletedEventHandler(ByVal sender As Object, ByVal e As GetBirthdaysCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetBirthdaysCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetWorkOrderCompletedEventHandler(ByVal sender As Object, ByVal e As GetWorkOrderCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetWorkOrderCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Xml.XmlNode
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Xml.XmlNode)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub GetEditLoadsCompletedEventHandler(ByVal sender As Object, ByVal e As GetEditLoadsCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GetEditLoadsCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub getParentCompanyCompletedEventHandler(ByVal sender As Object, ByVal e As getParentCompanyCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getParentCompanyCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub getBannersCompletedEventHandler(ByVal sender As Object, ByVal e As getBannersCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getBannersCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataTable
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataTable)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub getDockMonitorReportDataCompletedEventHandler(ByVal sender As Object, ByVal e As getDockMonitorReportDataCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class getDockMonitorReportDataCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub AuthenticateCompletedEventHandler(ByVal sender As Object, ByVal e As AuthenticateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AuthenticateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ExternalLoginProviderResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ExternalLoginProviderResult)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")>  _
    Public Delegate Sub tAuthenticateCompletedEventHandler(ByVal sender As Object, ByVal e As tAuthenticateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class tAuthenticateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As ExternalLoginProviderResult
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),ExternalLoginProviderResult)
            End Get
        End Property
    End Class
End Namespace
