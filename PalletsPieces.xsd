<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="PalletsPieces" targetNamespace="http://tempuri.org/PalletsPieces.xsd" xmlns:mstns="http://tempuri.org/PalletsPieces.xsd" xmlns="http://tempuri.org/PalletsPieces.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="RTDSConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="RTDSConnectionString (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.seuDockMonitor.My.MySettings.GlobalReference.Default.RTDSConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PalletsPiecesTableAdapter" GeneratorDataComponentClassName="PalletsPiecesTableAdapter" Name="PalletsPieces" UserDataComponentName="PalletsPiecesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="RTDSConnectionString (MySettings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="PiecesRecvFill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="PiecesRecvGetData" GeneratorSourceName="PiecesRecvFill" GetMethodModifier="Public" GetMethodName="PiecesRecvGetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="PiecesRecvGetData" UserSourceName="PiecesRecvFill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        SUM(WorkOrder.Pieces) AS PiecesReciev
FROM            Location AS Location INNER JOIN
                         WorkOrder AS WorkOrder ON Location.ID = WorkOrder.LocationID
WHERE        (Location.Name = @location) AND (CONVERT(VARCHAR(10), WorkOrder.LogDate, 101) = CONVERT(VARCHAR(10), GETDATE(), 101)) AND (CONVERT(VARCHAR(10), 
                         WorkOrder.CompTime, 101) = CONVERT(VARCHAR(10), WorkOrder.LogDate, 101))
GROUP BY CONVERT(VARCHAR(10), WorkOrder.LogDate, 101), Location.Name
HAVING        (CONVERT(VARCHAR(10), WorkOrder.LogDate, 101) = CONVERT(VARCHAR(10), GETDATE(), 101))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="location" ColumnName="Name" DataSourceName="RTDS.dbo.Location" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@location" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PiecesReciev" DataSetColumn="Location" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="RTDSConnectionString (MySettings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="PcsRecv" Modifier="Public" Name="PcsRecv" QueryType="Scalar" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="PcsRecv">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        SUM(WorkOrder.Pieces) AS PiecesReciev
FROM            Location AS Location INNER JOIN
                         WorkOrder AS WorkOrder ON Location.ID = WorkOrder.LocationID
WHERE        (Location.Name = @location) AND (CONVERT(VARCHAR(10), WorkOrder.LogDate, 101) = CONVERT(VARCHAR(10), GETDATE(), 101)) AND (CONVERT(VARCHAR(10), 
                         WorkOrder.CompTime, 101) = CONVERT(VARCHAR(10), WorkOrder.LogDate, 101))
GROUP BY CONVERT(VARCHAR(10), WorkOrder.LogDate, 101), Location.Name
HAVING        (CONVERT(VARCHAR(10), WorkOrder.LogDate, 101) = CONVERT(VARCHAR(10), GETDATE(), 101))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="location" ColumnName="Name" DataSourceName="RTDS.dbo.Location" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@location" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="RTDSConnectionString (MySettings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="PcsSched" Modifier="Public" Name="PcsSched" QueryType="Scalar" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="PcsSched">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        SUM(WorkOrder.Pieces) AS PiecesSched
FROM            Location AS Location INNER JOIN
                         WorkOrder AS WorkOrder ON Location.ID = WorkOrder.LocationID
WHERE        (Location.Name = @location)
GROUP BY CONVERT(VARCHAR(10), WorkOrder.LogDate, 101), Location.Name
HAVING        (CONVERT(VARCHAR(10), WorkOrder.LogDate, 101) = CONVERT(VARCHAR(10), GETDATE(), 101))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="location" ColumnName="Name" DataSourceName="RTDS.dbo.Location" DataTypeServer="nvarchar(50)" DbType="String" Direction="Input" ParameterName="@location" Precision="0" ProviderType="NVarChar" Scale="0" Size="50" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="PalletsPieces" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_DataSetName="PalletsPieces" msprop:Generator_UserDSName="PalletsPieces">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="PalletsPieces" msprop:Generator_TableClassName="PalletsPiecesDataTable" msprop:Generator_TableVarName="tablePalletsPieces" msprop:Generator_TablePropName="_PalletsPieces" msprop:Generator_RowDeletingName="PalletsPiecesRowDeleting" msprop:Generator_RowChangingName="PalletsPiecesRowChanging" msprop:Generator_RowEvHandlerName="PalletsPiecesRowChangeEventHandler" msprop:Generator_RowDeletedName="PalletsPiecesRowDeleted" msprop:Generator_UserTableName="PalletsPieces" msprop:Generator_RowChangedName="PalletsPiecesRowChanged" msprop:Generator_RowEvArgName="PalletsPiecesRowChangeEvent" msprop:Generator_RowClassName="PalletsPiecesRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Location" msprop:Generator_ColumnVarNameInTable="columnLocation" msprop:Generator_ColumnPropNameInRow="Location" msprop:Generator_ColumnPropNameInTable="LocationColumn" msprop:Generator_UserColumnName="Location" type="xs:string" minOccurs="0" />
              <xs:element name="PiecesSched" msprop:Generator_ColumnVarNameInTable="columnPiecesSched" msprop:Generator_ColumnPropNameInRow="PiecesSched" msprop:Generator_ColumnPropNameInTable="PiecesSchedColumn" msprop:Generator_UserColumnName="PiecesSched" type="xs:int" minOccurs="0" />
              <xs:element name="PiecesReciev" msprop:Generator_ColumnVarNameInTable="columnPiecesReciev" msprop:Generator_ColumnPropNameInRow="PiecesReciev" msprop:Generator_ColumnPropNameInTable="PiecesRecievColumn" msprop:Generator_UserColumnName="PiecesReciev" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
  </xs:element>
</xs:schema>